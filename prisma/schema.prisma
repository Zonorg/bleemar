generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  name      String
  username  String   @unique
  password  String
  role      String   @default("User")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id             String        @id @default(uuid()) @map("_id")
  title          String
  total_quantity Int
  order_date     String
  size           String
  workshop       String
  garmentcuts    Garmentcuts[]
  details        Details[]
  isCompleted    Boolean       @default(false)
  updatedAt      DateTime?     @updatedAt
  createdAt      DateTime      @default(now())
}

model Garmentcuts {
  id       String  @id @default(uuid()) @map("_id")
  color    String
  combined String
  lining   String
  quantity Int
  Order    Order?  @relation(fields: [orderId], references: [id])
  orderId  String?
}

model Details {
  id        String   @id @default(uuid()) @map("_id")
  title     String
  quantity  Int
  createdAt DateTime @default(now())
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
}

model Roll {
  id             String        @id @default(uuid()) @map("_id")
  order_number   Int
  name           String
  size           String
  workshop       String
  total_quantity Int
  order_date     String
  rollcuts       RollCuts[]
  rolldetails    RollDetails[]
  payments       Payments[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt
}

model RollCuts {
  id       String  @id @default(uuid()) @map("_id")
  color    String
  combined String
  lining   String
  quantity Int
  Roll     Roll?   @relation(fields: [rollId], references: [id])
  rollId   String?
}

model RollDetails {
  id        String   @id @default(uuid()) @map("_id")
  title     String
  quantity  Int
  createdAt DateTime @default(now())
  Roll      Roll?    @relation(fields: [rollId], references: [id])
  rollId    String?
}

model Payments {
  id        String    @id @default(uuid()) @map("_id")
  amount    String
  date      String
  status    Boolean?
  signature String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Roll      Roll?     @relation(fields: [rollId], references: [id])
  rollId    String?
}
